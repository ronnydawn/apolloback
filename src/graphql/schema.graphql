scalar Upload

# type Query {
#   hello(name: String): String!
# }

type Query {
  users: [User!]
  user(id: ID!): User
  me: User

  getLevel: [Level!]
  navigation: [Navigation!]
  partner: [Partner]
  partnerOrder: [Partner!]
  orderPartner: [OrderPartner!]
  package: [Package]
  account: [Account]
  account1: [Account]
  ModPackage1: [Package]
  product: [Product!]
  rolePartner: [Role!]
  partnerRole: [Partner!]
  listLevel: [Level!]

  messages: [Message!]!
  message(id: ID!): Message!
}

# ===========================================================================
type User {
  id: ID!
  username: String!
  messages: [Message!]
}

type Message {
  id: ID!
  text: String!
  user: User!
}

type Level {
  id: ID!
  name: String!
  partnerid: Int!
  nav:[Navigation!]
}

type Navigation {
  id: ID!
  name: String
  content: String
  active: Int!
  parentid: Int
  subnav: [Navigation!]
}

type Order {
  id: ID!
  order_number: String
  productid: Int
  packageid: Int
  product: [Product!]
  package: [Package!]
}

type Partner {
  id: ID!
  company: String
  email: String
  order: [Order!]
  level: [Level!]
}

type OrderPartner {
  id: ID!
  order_number: String
  partner: [Partner!]
  product: [Product!]
  package: [Package!]
}

type Product {
  id: ID!
  name: String
  desc: String
  package: [Package]
}

type Package {
  id: ID
  productid: Int
  packageid: Int
  name: String
  navigation: String
}

type Account {
  id: ID
  name: String
  email: String
}

type Role {
  id: ID
  productid: Int
  rolenavid: Int
  partnerid: Int
  levelid: Int
  navid: Int
  permid: String
  partner: [Partner!]
}